"use client";

import Link from "next/link";
import { useEffect, useRef, useState } from "react";
import { useMapContext } from "#src/context/GoogleMaps";
import { GOOGLE_MAPS_ELEMENT_ID, googleMaps } from "#src/context/GoogleMaps/google-maps";
import { LocateButton, type Pos } from "./buttons/LocateButton";
import { Button } from "./ui/Button";

const locations = [
  { title: "some title 1", infoWindowElementId: "e-1", lat: -31.56391, lng: 147.154312 },
  { title: "some title 2", infoWindowElementId: "e-2", lat: -33.718234, lng: 150.363181 },
  { title: "some title 3", infoWindowElementId: "e-3", lat: -33.727111, lng: 150.371124 },
  { title: "some title 4", infoWindowElementId: "e-4", lat: -33.848588, lng: 151.209834 },
  { title: "some title 5", infoWindowElementId: "e-5", lat: -33.851702, lng: 151.216968 },
  { title: "some title 6", infoWindowElementId: "e-6", lat: -34.671264, lng: 150.863657 },
  { title: "some title 7", infoWindowElementId: "e-7", lat: -35.304724, lng: 148.662905 },
  { title: "some title 8", infoWindowElementId: "e-8", lat: -36.817685, lng: 175.699196 },
  { title: "some title 9", infoWindowElementId: "e-9", lat: -36.828611, lng: 175.790222 },
  { title: "some title 10", infoWindowElementId: "e-10", lat: -37.75, lng: 145.116667 },
  { title: "some title 11", infoWindowElementId: "e-11", lat: -37.759859, lng: 145.128708 },
  { title: "some title 12", infoWindowElementId: "e-12", lat: -37.765015, lng: 145.133858 },
  { title: "some title 13", infoWindowElementId: "e-13", lat: -37.770104, lng: 145.143299 },
  { title: "some title 14", infoWindowElementId: "e-14", lat: -37.7737, lng: 145.145187 },
  { title: "some title 15", infoWindowElementId: "e-15", lat: -37.774785, lng: 145.137978 },
  { title: "some title 16", infoWindowElementId: "e-16", lat: -37.819616, lng: 144.968119 },
  { title: "some title 17", infoWindowElementId: "e-17", lat: -38.330766, lng: 144.695692 },
  { title: "some title 18", infoWindowElementId: "e-18", lat: -39.927193, lng: 175.053218 },
  { title: "some title 19", infoWindowElementId: "e-19", lat: -41.330162, lng: 174.865694 },
  { title: "some title 20", infoWindowElementId: "e-20", lat: -42.734358, lng: 147.439506 },
  { title: "some title 21", infoWindowElementId: "e-21", lat: -42.734358, lng: 147.501315 },
  { title: "some title 22", infoWindowElementId: "e-22", lat: -42.735258, lng: 147.438 },
  { title: "some title 23", infoWindowElementId: "e-23", lat: -43.999792, lng: 170.463352 },
];

export function GoogleMap() {
  const { isLoaded, isVisible } = useMapContext();
  const googleMapRef = useRef(null);
  const [userPos, setUserPos] = useState<Pos | undefined>();
  const [visible, setVisible] = useState(false);

  useEffect(() => {
    if (!isLoaded || googleMapRef.current === null) return;
    googleMaps.addMarkers(locations);
  }, [isLoaded]);
  /*
  useEffect(() => {
    if (!userPos) return;
    const { lng, lat } = userPos;
    googleMaps.setPos({ lng, lat, zoom: 10 });
    googleMaps.addMarker({ lng, lat });

    
  }, [userPos]);
*/
  return (
    <>
      <div className="">
        <LocateButton onLocated={(pos) => setUserPos(pos)} label="Go to your position" />
        <Button onClick={() => googleMaps.clearMarkers()}>clear markers</Button>
        <button onClick={() => setVisible((prev) => !prev)}>toggle visible</button>
      </div>
      <div
        ref={googleMapRef}
        data-visible={isVisible || undefined}
        className="invisible h-96 w-96 data-[visible]:visible"
      />
      {locations.map((location) => (
        <div className="text-black" key={location.infoWindowElementId} id={location.infoWindowElementId}>
          <h2 className="text-black">title: {location.title}</h2>
          <p className="text-neutral-800">some paragraph text</p>
          <Link className="text-neutral-800" href="/event/8e8Or">
            soft link to event goes here
          </Link>
        </div>
      ))}
    </>
  );
}
